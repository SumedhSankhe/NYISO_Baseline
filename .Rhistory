ggsave(tmpName, bodyItem, dpi = 100)
}
paste0("<center><img src=\"", tmpName, "\"></center><br><br>")
}, error = function(err) {
})
} else if (class(bodyItem)[1] == "character") {
if (substr(str_replace_all(tolower(bodyItem), "\\\\", "/"), 1, 3) %in% c("c:/", "o:/", "//e", "d:/", "//b")) {
if (file.exists(bodyItem)) {
paste0("<center><img src=\"", bodyItem, "\"></center><br><br>")
} else {
stop(paste0("The file \"", bodyItem, "\" doesn't exist. Note that character objects in bodyList will be ",
"interpreted as image files if they begin with \"c:/\", \"o:/\", \"//e\", \"d:/\", or \"//b\"."))
}
} else {
paste0(bodyItem, "<br><br>")
}
} else if (class(bodyItem)[1] == "data.table") {
paste0(print(xtable(bodyItem), type = "html", print.results = F, comment = F,
include.rownames = F, include.colnames = T, sanitize.text.function = force), "<br>")
} else {
stop(paste0("Item ", i, " in bodylist is not of class \"character\", \"ggplot\", or \"data.table\"."))
}
}), collapse = "")
emailText
sendmail(to, subject, emailText, attachments, cc)
send.mail()
?send.mail()
sendmail <- function(to, subject, emailText, sender = Sys.getenv('sender'), passwd = Sys.getenv('passwd'), attachments = NULL, cc = NULL) {
emailText <- paste0("<HTML><HEAD><STYLE>table {border-collapse: collapse;width:100%;background-color: #ffffff}",
"th, td {text-align: left;padding: 3px;}tr:nth-child(even){background-color: #f2f2f2}th ",
"{background-color: #003E74;color: white;}</STYLE></HEAD><BODY>", emailText, "</BODY></HTML>")
send.mail(from = from, to = to, subject = subject, body = emailText, attach.files = attachments,
smtp = list(host.name = "smtp.gmail.com", port = 587, user.name = sender, passwd = passwd, tls = TRUE),
html = T, authenticate = T, send = T)
}
sendmail(to, subject, emailText, attachments, cc)
sender = Sys.getenv('sender')
passwd = Sys.getenv('passwd')
attachments = NULL
emailText <- paste0("<HTML><HEAD><STYLE>table {border-collapse: collapse;width:100%;background-color: #ffffff}",
"th, td {text-align: left;padding: 3px;}tr:nth-child(even){background-color: #f2f2f2}th ",
"{background-color: #003E74;color: white;}</STYLE></HEAD><BODY>", emailText, "</BODY></HTML>")
send.mail(from = from, to = to, subject = subject, body = emailText, attach.files = attachments,
smtp = list(host.name = "smtp.gmail.com", port = 587, user.name = sender, passwd = passwd, tls = TRUE),
html = T, authenticate = T, send = T)
send.mail(from = from, to = to, subject = subject, body = emailText, attach.files = attachments,
smtp = list(host.name = "smtp.gmail.com", port = 587, user.name = Sys.getenv('sender'), passwd = Sys.getenv('passwd'), tls = T),
html = T, authenticate = T, send = T)
mail_me <- function(bodyList = list(), errorTo = 'sumedh.sankhe.rscript@gmail.com', to = 'sumedh.sankhe@gmail.com',
subject = "#Automation: ", from = errorTo, attachments = NULL,
startTime = NULL, cc = NULL, bcc = NULL, imgWH = NULL){
library(mailR)
library(stringr)
library(xtable)
#Temp directory, for image attachements
tmpDir <- "D:\\tmp\\img"
errorMailText <- ''
sendmail <- function(to, subject, emailText, attachments = NULL) {
emailText <- paste0("<HTML><HEAD><STYLE>table {border-collapse: collapse;width:100%;background-color: #ffffff}",
"th, td {text-align: left;padding: 3px;}tr:nth-child(even){background-color: #f2f2f2}th ",
"{background-color: #003E74;color: white;}</STYLE></HEAD><BODY>", emailText, "</BODY></HTML>")
send.mail(from = from, to = to, subject = subject, body = emailText, attach.files = attachments,
smtp = list(host.name = "smtp.gmail.com", port = 587, user.name = Sys.getenv('sender'), passwd = Sys.getenv('passwd'), tls = T),
html = T, authenticate = T, send = T)
}
tryCatch({
if (length(bodyList) == 0 | class(bodyList) != "list") {
stop("Make sure the \"bodyList\" argument is a list with length > 0.")
} else {
if (!is.null(startTime)) {
timeDiff <- round(as.numeric(Sys.time()) - as.numeric(startTime))
if (timeDiff >= 60) {
units <- "minutes"
timeDiff <- round(timeDiff / 60)
} else {
units <- "seconds"
}
bodyList <- append(bodyList, list(paste0("This report took ", timeDiff, " ", units, " to generate.")))
}
# Formats the bodyItems
emailText <- paste0(lapply(1:length(bodyList), function(i) {
bodyItem <- bodyList[[i]]
if ("ggplot" %in% class(bodyItem)) {
tmpName <- paste0(tmpDir, "/mail temp img",as.numeric(Sys.time()),".png")
tryCatch({
if (!is.null(imgWH)) {
ggsave(tmpName, bodyItem, width = imgWH[1], height = imgWH[2], dpi = 100)
} else {
ggsave(tmpName, bodyItem, dpi = 100)
}
paste0("<center><img src=\"", tmpName, "\"></center><br><br>")
}, error = function(err) {
})
} else if (class(bodyItem)[1] == "character") {
if (substr(str_replace_all(tolower(bodyItem), "\\\\", "/"), 1, 3) %in% c("c:/", "o:/", "//e", "d:/", "//b")) {
if (file.exists(bodyItem)) {
paste0("<center><img src=\"", bodyItem, "\"></center><br><br>")
} else {
stop(paste0("The file \"", bodyItem, "\" doesn't exist. Note that character objects in bodyList will be ",
"interpreted as image files if they begin with \"c:/\", \"o:/\", \"//e\", \"d:/\", or \"//b\"."))
}
} else {
paste0(bodyItem, "<br><br>")
}
} else if (class(bodyItem)[1] == "data.table") {
paste0(print(xtable(bodyItem), type = "html", print.results = F, comment = F,
include.rownames = F, include.colnames = T, sanitize.text.function = force), "<br>")
} else {
stop(paste0("Item ", i, " in bodylist is not of class \"character\", \"ggplot\", or \"data.table\"."))
}
}), collapse = "")
sendmail(to, subject, emailText, attachments, cc)
}
}, error = function(errorText) {
tryCatch({
errorText <- paste0(errorText, "<br><br>", errorMailText)
sendmail(errorTo, "#Automation: Error", errorText)
}, error = function(err) {
f <- paste0("D:\\tmp\\error\\", format(Sys.time(),"%Y%m%d%H%M%S"), ".txt")
write.table(paste0("Errors as follows:\n", err), file = f, col.names = F, row.names = F, quote = F)
})
})
suppressWarnings(file.remove(paste0(tmpDir, "/", list.files(tmpDir, ""))))
}
mail_me
mail_me('test')
mail_me(list('test'))
mail_me <- function(bodyList = list(), errorTo = 'sumedh.sankhe.rscript@gmail.com', to = 'sumedh.sankhe@gmail.com',
subject = "#Automation: ", from = errorTo, attachments = NULL,
startTime = NULL,imgWH = NULL){
library(mailR)
library(stringr)
library(xtable)
#Temp directory, for image attachements
tmpDir <- "D:\\tmp\\img"
errorMailText <- ''
sendmail <- function(to, subject, emailText, attachments = NULL) {
emailText <- paste0("<HTML><HEAD><STYLE>table {border-collapse: collapse;width:100%;background-color: #ffffff}",
"th, td {text-align: left;padding: 3px;}tr:nth-child(even){background-color: #f2f2f2}th ",
"{background-color: #003E74;color: white;}</STYLE></HEAD><BODY>", emailText, "</BODY></HTML>")
send.mail(from = from, to = to, subject = subject, body = emailText, attach.files = attachments,
smtp = list(host.name = "smtp.gmail.com", port = 587, user.name = Sys.getenv('sender'), passwd = Sys.getenv('passwd'), tls = T),
html = T, authenticate = T, send = T)
}
tryCatch({
if (length(bodyList) == 0 | class(bodyList) != "list") {
stop("Make sure the \"bodyList\" argument is a list with length > 0.")
} else {
if (!is.null(startTime)) {
timeDiff <- round(as.numeric(Sys.time()) - as.numeric(startTime))
if (timeDiff >= 60) {
units <- "minutes"
timeDiff <- round(timeDiff / 60)
} else {
units <- "seconds"
}
bodyList <- append(bodyList, list(paste0("This report took ", timeDiff, " ", units, " to generate.")))
}
# Formats the bodyItems
emailText <- paste0(lapply(1:length(bodyList), function(i) {
bodyItem <- bodyList[[i]]
if ("ggplot" %in% class(bodyItem)) {
tmpName <- paste0(tmpDir, "/mail temp img",as.numeric(Sys.time()),".png")
tryCatch({
if (!is.null(imgWH)) {
ggsave(tmpName, bodyItem, width = imgWH[1], height = imgWH[2], dpi = 100)
} else {
ggsave(tmpName, bodyItem, dpi = 100)
}
paste0("<center><img src=\"", tmpName, "\"></center><br><br>")
}, error = function(err) {
})
} else if (class(bodyItem)[1] == "character") {
if (substr(str_replace_all(tolower(bodyItem), "\\\\", "/"), 1, 3) %in% c("c:/", "o:/", "//e", "d:/", "//b")) {
if (file.exists(bodyItem)) {
paste0("<center><img src=\"", bodyItem, "\"></center><br><br>")
} else {
stop(paste0("The file \"", bodyItem, "\" doesn't exist. Note that character objects in bodyList will be ",
"interpreted as image files if they begin with \"c:/\", \"o:/\", \"//e\", \"d:/\", or \"//b\"."))
}
} else {
paste0(bodyItem, "<br><br>")
}
} else if (class(bodyItem)[1] == "data.table") {
paste0(print(xtable(bodyItem), type = "html", print.results = F, comment = F,
include.rownames = F, include.colnames = T, sanitize.text.function = force), "<br>")
} else {
stop(paste0("Item ", i, " in bodylist is not of class \"character\", \"ggplot\", or \"data.table\"."))
}
}), collapse = "")
sendmail(to, subject, emailText, attachments)
}
}, error = function(errorText) {
tryCatch({
errorText <- paste0(errorText, "<br><br>", errorMailText)
sendmail(errorTo, "#Automation: Error", errorText)
}, error = function(err) {
f <- paste0("D:\\tmp\\error\\", format(Sys.time(),"%Y%m%d%H%M%S"), ".txt")
write.table(paste0("Errors as follows:\n", err), file = f, col.names = F, row.names = F, quote = F)
})
})
suppressWarnings(file.remove(paste0(tmpDir, "/", list.files(tmpDir, ""))))
}
mail_me(list('test'))
bodyList = list('test')
errorTo = 'sumedh.sankhe.rscript@gmail.com'
to = 'sumedh.sankhe@gmail.com'
attachments = NULL
from = errorTo
subject = "#Automation: "
startTime = NULL
imgWH = NULL
library(mailR)
library(stringr)
library(xtable)
#Temp directory, for image attachements
tmpDir <- "D:\\tmp\\img"
errorMailText <- ''
sendmail <- function(to, subject, emailText, attachments = NULL) {
emailText <- paste0("<HTML><HEAD><STYLE>table {border-collapse: collapse;width:100%;background-color: #ffffff}",
"th, td {text-align: left;padding: 3px;}tr:nth-child(even){background-color: #f2f2f2}th ",
"{background-color: #003E74;color: white;}</STYLE></HEAD><BODY>", emailText, "</BODY></HTML>")
send.mail(from = from, to = to, subject = subject, body = emailText, attach.files = attachments,
smtp = list(host.name = "smtp.gmail.com", port = 587, user.name = Sys.getenv('sender'), passwd = Sys.getenv('passwd'), tls = T),
html = T, authenticate = T, send = T)
}
tryCatch({
if (length(bodyList) == 0 | class(bodyList) != "list") {
stop("Make sure the \"bodyList\" argument is a list with length > 0.")
} else {
if (!is.null(startTime)) {
timeDiff <- round(as.numeric(Sys.time()) - as.numeric(startTime))
if (timeDiff >= 60) {
units <- "minutes"
timeDiff <- round(timeDiff / 60)
} else {
units <- "seconds"
}
bodyList <- append(bodyList, list(paste0("This report took ", timeDiff, " ", units, " to generate.")))
}
# Formats the bodyItems
emailText <- paste0(lapply(1:length(bodyList), function(i) {
bodyItem <- bodyList[[i]]
if ("ggplot" %in% class(bodyItem)) {
tmpName <- paste0(tmpDir, "/mail temp img",as.numeric(Sys.time()),".png")
tryCatch({
if (!is.null(imgWH)) {
ggsave(tmpName, bodyItem, width = imgWH[1], height = imgWH[2], dpi = 100)
} else {
ggsave(tmpName, bodyItem, dpi = 100)
}
paste0("<center><img src=\"", tmpName, "\"></center><br><br>")
}, error = function(err) {
})
} else if (class(bodyItem)[1] == "character") {
if (substr(str_replace_all(tolower(bodyItem), "\\\\", "/"), 1, 3) %in% c("c:/", "o:/", "//e", "d:/", "//b")) {
if (file.exists(bodyItem)) {
paste0("<center><img src=\"", bodyItem, "\"></center><br><br>")
} else {
stop(paste0("The file \"", bodyItem, "\" doesn't exist. Note that character objects in bodyList will be ",
"interpreted as image files if they begin with \"c:/\", \"o:/\", \"//e\", \"d:/\", or \"//b\"."))
}
} else {
paste0(bodyItem, "<br><br>")
}
} else if (class(bodyItem)[1] == "data.table") {
paste0(print(xtable(bodyItem), type = "html", print.results = F, comment = F,
include.rownames = F, include.colnames = T, sanitize.text.function = force), "<br>")
} else {
stop(paste0("Item ", i, " in bodylist is not of class \"character\", \"ggplot\", or \"data.table\"."))
}
}), collapse = "")
sendmail(to, subject, emailText, attachments)
}
}, error = function(errorText) {
tryCatch({
errorText <- paste0(errorText, "<br><br>", errorMailText)
sendmail(errorTo, "#Automation: Error", errorText)
}, error = function(err) {
f <- paste0("D:\\tmp\\error\\", format(Sys.time(),"%Y%m%d%H%M%S"), ".txt")
write.table(paste0("Errors as follows:\n", err), file = f, col.names = F, row.names = F, quote = F)
})
})
mail_me <- function(bodyList = list(), errorTo = 'sumedh.sankhe.rscript@gmail.com', to = 'sumedh.sankhe@gmail.com',
subject = "#Automation: ", from = errorTo, attachments = NULL,
startTime = NULL,imgWH = NULL){
library(mailR)
library(stringr)
library(xtable)
#Temp directory, for image attachements
tmpDir <- "D:\\tmp\\img"
errorMailText <- ''
sendmail <- function(to, subject, emailText, attachments = NULL) {
emailText <- paste0("<HTML><HEAD><STYLE>table {border-collapse: collapse;width:100%;background-color: #ffffff}",
"th, td {text-align: left;padding: 3px;}tr:nth-child(even){background-color: #f2f2f2}th ",
"{background-color: #003E74;color: white;}</STYLE></HEAD><BODY>", emailText, "</BODY></HTML>")
send.mail(from = from, to = to, subject = subject, body = emailText, attach.files = attachments,
smtp = list(host.name = "smtp.gmail.com", port = 587, user.name = Sys.getenv('sender'), passwd = Sys.getenv('passwd'), tls = T),
html = T, authenticate = T, send = T)
}
tryCatch({
if (length(bodyList) == 0 | class(bodyList) != "list") {
stop("Make sure the \"bodyList\" argument is a list with length > 0.")
} else {
if (!is.null(startTime)) {
timeDiff <- round(as.numeric(Sys.time()) - as.numeric(startTime))
if (timeDiff >= 60) {
units <- "minutes"
timeDiff <- round(timeDiff / 60)
} else {
units <- "seconds"
}
bodyList <- append(bodyList, list(paste0("This report took ", timeDiff, " ", units, " to generate.")))
}
# Formats the bodyItems
emailText <- paste0(lapply(1:length(bodyList), function(i) {
bodyItem <- bodyList[[i]]
if ("ggplot" %in% class(bodyItem)) {
tmpName <- paste0(tmpDir, "/mail temp img",as.numeric(Sys.time()),".png")
tryCatch({
if (!is.null(imgWH)) {
ggsave(tmpName, bodyItem, width = imgWH[1], height = imgWH[2], dpi = 100)
} else {
ggsave(tmpName, bodyItem, dpi = 100)
}
paste0("<center><img src=\"", tmpName, "\"></center><br><br>")
}, error = function(err) {
})
} else if (class(bodyItem)[1] == "character") {
if (substr(str_replace_all(tolower(bodyItem), "\\\\", "/"), 1, 3) %in% c("c:/", "o:/", "//e", "d:/", "//b")) {
if (file.exists(bodyItem)) {
paste0("<center><img src=\"", bodyItem, "\"></center><br><br>")
} else {
stop(paste0("The file \"", bodyItem, "\" doesn't exist. Note that character objects in bodyList will be ",
"interpreted as image files if they begin with \"c:/\", \"o:/\", \"//e\", \"d:/\", or \"//b\"."))
}
} else {
paste0(bodyItem, "<br><br>")
}
} else if (class(bodyItem)[1] == "data.table") {
paste0(print(xtable(bodyItem), type = "html", print.results = F, comment = F,
include.rownames = F, include.colnames = T, sanitize.text.function = force), "<br>")
} else {
stop(paste0("Item ", i, " in bodylist is not of class \"character\", \"ggplot\", or \"data.table\"."))
}
}), collapse = "")
sendmail(to, subject, emailText, attachments)
}
}, error = function(errorText) {
tryCatch({
errorText <- paste0(errorText, "<br><br>", errorMailText)
sendmail(errorTo, "#Automation: Error", errorText)
}, error = function(err) {
f <- paste0("D:\\tmp\\error\\", format(Sys.time(),"%Y%m%d%H%M%S"), ".txt")
write.table(paste0("Errors as follows:\n", err), file = f, col.names = F, row.names = F, quote = F)
})
})
suppressWarnings(file.remove(paste0(tmpDir, "/", list.files(tmpDir, ""))))
}
mail_me(bodyList = list('Hello World'), subject = )
mail_me(bodyList = list('Hello World'), subject = 'Hello Shit')
library(stringr)
str_replace_all()
?str_replace_all()
?gsub
library(RMySQL)
#
connObj <- dbConnect(MySQL(), user = 'root', password='01234', dbname='mysql',host='localhost')
Sys.getenv()
Sys.getenv(Path)
Sys.getenv('PATH')
Sys.getenv('sender')
Sys.getenv('psswd')
Sys.getenv()
x <- tempdir()
x
?tempdir()
tempfile()
tempfile("plot", fileext = c(".ps", ".pdf"))
unlink()
x <- tempfile('data', fileext = c('.csv'))
x
source('D:/Github/mail_function.r')
library(data.table)
dt <-  as.data.table(read.csv("D:/Github/JobScrapper-v2/master_data/master.csv", stringsAsFactors = F))
dt[,dttm := as.POSIXct(dttm, 'EST')]
dt[, date := as.Date(dttm,'EST')]
newDT <- dt[date > (Sys.Date() - 1)]
newDT[,Title := paste0('<a href="',link,'">', Title,"</a>")]
mailDT <-  newDT[,.(Company, Location, Title, Summary)]
text <- paste0('Found <b>', nrow(newDT), '</b> new positions, check the table below for something new')
write.csv(mailDT, x)
unlink(x)
x
tempfile <- tempfile(pattern = 'data', fileext = '.csv')
?lda
setwd("D:/Github/NYISO_Baseline")
library(tidyverse)
library(data.table)
df <- fread('baseline.csv')
View(df)
df <- fread('baseline.csv')
meltDT <- melt.data.table(df, 'id')
View(meltDT)
df[,V1:= NULL]
meltDT <- melt.data.table(df, c('id','dttm'))
df
meltDT <- melt.data.table(df, c('id','hour'))
View(meltDT)
df[id == 'site__1']
df[,.N,id]
df[id == site_1]
df[id == 'site_1']
df[,':='(V1 = NULL, day = NULL)]
meltDT <- melt.data.table(df, c('id','hour'))
meltDT
ggplot(data = meltDT, aes(x = hour, y = variable, fill value))+
geom_line()+
facet_wrap(id)
ggplot(data = meltDT, aes(x = hour, y = variable, fill value))+
geom_line()+
facet_wrap(id)
ggplot(data = meltDT, aes(x = hour, y = variable, fill value))+
geom_line()+
facet_wrap(~.id)
ggplot(data = meltDT, aes(x = hour, y = variable, fill value))+
geom_line()
ggplot(data = meltDT, aes(x = hour, y = variable, fill value))+
geom_line()
ggplot(data = meltDT, aes(x = hour, y = variable, fill value))+  geom_line()
ggplot(data = meltDT)
ggplot(data = meltDT)+  geom_line()
ggplot(data = meltDT)+  geom_line(aes(x = hour, y = variable, fill value))
ggplot(data = meltDT)+  geom_line(aes(x = hour, y = variable, fill =value))
ggplot(data = meltDT)+  geom_line(aes(x = hour, y = variable, color =value))
ggplot(data = meltDT) +
geom_line(aes(x = hour, y = variable, color =value))+
facet_wrap(~.id)
ggplot(data = meltDT) +
geom_line(aes(x = hour, y = variable, color =value))+
facet_wrap(id)
?facet_wrap
ggplot(data = meltDT) +
geom_line(aes(x = hour, y = variable, color =value))+
facet_wrap(~id)
ggplot(data = meltDT) +
geom_line(aes(x = hour, color = variable, y =value))+
facet_wrap(~id)
View
View(df[id == 'site__6'])
df[id == 'site_6']
View(df[id == 'site_6'])
ggplot(data = df[id == 'site_6'])+
geom_line(aes(x = hour, y = kW))
ggplot(data = df[id == 'site_6'])+
geom_line(aes(x = hour, y = kW, color = 'kW'))+
geom_line(aes(x = hour, y = baseline, color = 'baseline'))
list.files('./data/', full.names = T)
df1 <- rbindlist((lapply(list.files('./data/', full.names = T), fread))
)
df1
df1 <- rbindlist((lapply(list.files('./data/', full.names = T), function(x){
data.table(id = x, fread(x))
})))
View(df1)
names(df1)
names(df1) <- c('id','dttm','kwh')
dt1 <- melt.data.table(df1, c('id','dttm'))
dt1
rm(dt1)
ggplot(df1, aes(x = dttm , y = kwh, color = variable))+
geom_line()+
facet_wrap(~id)
ggplot(df1, aes(x = dttm , y = kwh))+
geom_line()+
facet_wrap(~id)
df1
ggplot(df1, aes(x = dttm , y = kwh))+
geom_line()
ggplot(df1, aes(x = dttm , y = kwh))+
geom_line()+
facet_wrap(~id)
df1
df1[,.N,id]
ggplot(df1[id == './data/site_1.csv'], aes(x = dttm , y = kwh))+
geom_line()
df1[id == './data/site_1.csv']
df1[id == './data/site_1.csv'][,.N,dttm]
sapply(df, class)
sapply(df1, class)
df1[, dttm := as.POSIXct(dttm)]
df1
ggplot(df1, aes(x = dttm , y = kwh))+
geom_line()+
facet_wrap(~id)
df1[, date := as.Date(dttm)]
as.Date('2017-06-01')
ggplot(df1[date >= as.Date('2017-06-01') & date <= as.Date('2017-06-04')], aes(x = dttm , y = kwh))+
geom_line()+
facet_wrap(~id)
ggplot(df1[date > as.Date('2017-06-02') & date <= as.Date('2017-06-04')], aes(x = dttm , y = kwh))+
geom_line()+
facet_wrap(~id)
ggplot(df1[date > as.Date('2017-06-02') & date <as.Date('2017-06-04')], aes(x = dttm , y = kwh))+
geom_line()+
facet_wrap(~id)
ggplot(df1, aes(x = dttm , y = kwh))+
geom_line()+
facet_wrap(~id)
ggplot(df1, aes(x = dttm , y = kwh))+
geom_line()+
facet_wrap(~id, scales = 'free')
